<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true">

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->

    <!-- <property name="LOG_NAME" value="/home"></property> -->

    <!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,,,, -->

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">

        <encoder>

            <!--<pattern>%d %p (%file:%line\)- %m%n</pattern>-->

            <!--格式化输出：%d:表示日期    %thread:表示线程名     %-5level:级别从左显示5个字符宽度  %msg:日志消息    %n:是换行符-->

            <pattern>%d{MM-dd HH:mm}  %-5level  - %logger{35}  %-5L %msg %n</pattern>

            <charset>UTF-8</charset>

        </encoder>

    </appender>

    <!--<include resource="org/springframework/boot/logging/logback/base.xml"/>-->
    <contextName>imapi</contextName>

    <property name="LOG_PATH" value="logs"/>
    <!--设置系统日志目录-->

    <property name="APPDIR" value="app"/>

    <!--
          说明：

          1、日志级别及文件

              日志记录采用分级记录，级别与日志文件名相对应，不同级别的日志信息记录到不同的日志文件中

              例如：error级别记录到log_error_xxx.log或log_error.log（该文件为当前记录的日志文件），而log_error_xxx.log为归档日志，

              日志文件按日期记录，同一天内，若日志文件大小等于或大于2M，则按0、1、2...顺序分别命名

              例如log-level-2013-12-21.0.log

              其它级别的日志也是如此。

          2、文件路径

              若开发、测试用，在Eclipse中运行项目，则到Eclipse的安装路径查找logs文件夹，以相对路径../logs。

              若部署到Tomcat下，则在Tomcat下的logs文件中

          3、Appender

              FILEERROR对应error级别，文件名以log-error-xxx.log形式命名

              FILEWARN对应warn级别，文件名以log-warn-xxx.log形式命名

              FILEINFO对应info级别，文件名以log-info-xxx.log形式命名

              FILEDEBUG对应debug级别，文件名以log-debug-xxx.log形式命名

              CONSOLE将日志信息输出到控制上，为方便开发测试使用

       -->

    <!-- 日志记录器，日期滚动记录 -->

    <appender name="FILEERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_PATH}/error.log</file>

        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            <!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->

            <fileNamePattern>${LOG_PATH}/error/log-error-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>

            <!-- 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，

            命名日志文件，例如log-error-2013-12-21.0.log -->

            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">

                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>

        </rollingPolicy>

        <!-- 追加方式记录日志 -->

        <append>true</append>
        <!-- 日志文件的格式 -->

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">

            <pattern>===%d{MM-dd HH:mm:ss} %-5level %logger Line:%-3L - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <!-- 此日志文件只记录info级别的 -->

        <filter class="ch.qos.logback.classic.filter.LevelFilter">

            <level>error</level>
<!-- "ACCEPT" 表示匹配该级别及以上 "DENY" 表示不匹配该级别及以上 "NEUTRAL" 表示该级别及以上的，由下一个filter处理，如果当前是最后一个，则表示匹配该级别及以上 -->
            <onMatch>ACCEPT</onMatch> 
<!-- DENY 表示不匹配该级别以下的 "ACCEPT" 表示匹配该级别以下 "NEUTRAL" 表示该级别及以下的，由下一个filter处理，如果当前是最后一个，则不匹配该级别以下的 -->
            <onMismatch>DENY</onMismatch>

        </filter>

    </appender>



    <!-- 日志记录器，日期滚动记录 -->

    <appender name="FILEINFO" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <!-- 正在记录的日志文件的路径及文件名 -->

        <file>${LOG_PATH}/log.log</file>

        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            <!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->

            <fileNamePattern>${LOG_PATH}/info/log-info-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>

            <!-- 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，
           		 命名日志文件，例如log-error-2013-12-21.0.log -->

					<!-- 日志总保存量为10GB -->
           <!--  <totalSizeCap>10GB</totalSizeCap> -->

            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 文件达到 最大10MB时会被压缩和切割 -->
                <maxFileSize>10MB</maxFileSize>

            </timeBasedFileNamingAndTriggeringPolicy>

        </rollingPolicy>

        <!-- 追加方式记录日志 -->

        <append>true</append>

        <!-- 日志文件的格式 -->

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">

            <pattern>%d{MM-dd HH:mm} - %logger{50}  %-5L %msg%n</pattern>

            <charset>UTF-8</charset>

        </encoder>

        <!-- 此日志文件只记录info级别的 -->

        <filter class="ch.qos.logback.classic.filter.LevelFilter">

            <level>info</level>

            <onMatch>ACCEPT</onMatch>

            <onMismatch>DENY</onMismatch>

        </filter>

    </appender>

    <!--&lt;!&ndash; 此日志文件只记录info级别的 &ndash;&gt;-->

    <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->

    <!--<level>warn</level>-->

    <!--<onMatch>ACCEPT</onMatch>-->

    <!--<onMismatch>DENY</onMismatch>-->

    <!--</filter>-->

    <!--&lt;!&ndash; 此日志文件只记录info级别的 &ndash;&gt;-->

    <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->

    <!--<level>error</level>-->

    <!--<onMatch>ACCEPT</onMatch>-->

    <!--<onMismatch>DENY</onMismatch>-->

    <!--</filter>-->

    <!--</appender>-->

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">

        <encoder>

            <pattern>%d{MM-dd HH:mm} - %logger{50}  %-5L %msg%n</pattern>

            <!--<charset>GBK</charset>-->

        </encoder>

    </appender>

    

    <logger name="org.springframework.aop.aspectj" level="ERROR"/>
    
    <logger name="org.mongodb" level="ERROR"/>
     <logger name="io.netty" level="ERROR"/>
    <logger name="org.redisson" level="ERROR"/>
    <logger name="org.springframework" level="ERROR"/>


    <!--<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">-->

    <!--<resetJUL>true</resetJUL>-->

    <!--</contextListener>-->
    <appender name="SecretChannel"
              class="ch.qos.logback.core.FileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <File>${LOG_PATH}/secret_channel.log</File>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%msg%n</Pattern>
        </layout>
    </appender>

    <logger name = "com.shiku.mianshi.controller.SercretChannelContoller" level="INFO" additivity="false">
        <appender-ref ref="SecretChannel" />
    </logger>


      <root level="INFO">

          <appender-ref ref="FILEERROR"/>

          <appender-ref ref="FILEINFO"/>

         <!--  <appender-ref ref="DBAPPENDER"/> -->

          <appender-ref ref="STDOUT"/>


      </root>





</configuration>